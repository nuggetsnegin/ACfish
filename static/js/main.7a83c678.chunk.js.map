{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","status","name","price","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","desc","image","addFish","currentTarget","reset","Inventory","onClick","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","details","isAvailable","src","alt","disabled","addToOrder","index","App","state","Date","now","setState","sampleFishes","age","cool","notFound","role","aria-label","Router","BrowserRouter","Switch","Route","exact","path","component","NotFound","render","document","querySelector"],"mappings":"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","file":"static/js/main.7a83c678.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'BELLS'\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, '-')\n    .replace(/[^\\w-]+/g, '')\n    .replace(/--+/g, '-')\n    .replace(/^-+/, '')\n    .replace(/-+$/, '');\n}\n\nexport function getFunName() {\n  const adjectives = [\n    'uchi',\n    'lazy',\n    'snooty',\n    'jock',\n    'cranky',\n    'peppy',\n    'normal',\n    'smug'\n  ];\n\n  const nouns = [\n    'bob',\n    'purrl',\n    'snake',\n    'poppy',\n    'ribbot',\n    'kappn',\n    'graham',\n    'paula',\n    'boomer',\n    'puck',\n    'resseti',\n    'coco',\n    'caesar',\n    'fang',\n    'bones',\n    'lucky',\n    'ed',\n    'alphonso',\n    'doc',\n    'dot',\n    'cyrus',\n    'cookie',\n    'chip',\n    'champ',\n    'cashmere',\n    'agentS',\n    'chester',\n    'chief',\n    'carlo',\n    'ace'\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React, { Component } from 'react';\r\nimport { getFunName } from '../helpers';\r\n\r\n//every component we have will be its own class\r\n//needs atleast 1 method inside of it - rendder: what dom elements do I put on the page?\r\nclass StorePicker extends Component {\r\n  myInput = React.createRef();\r\n  //property known as goToStore - set is as an arrow function so we can bind 'this' to the store picker component\r\n  //if you need to access 'this' in a custom method you must use arrow syntax\r\n  goToStore = event => {\r\n    //event object is full of information of what 'event' happened\r\n    event.preventDefault(); //stop page from refresh/submitting\r\n    //get text from input - without touching the DOM\r\n    const storeName = this.myInput.current.value; //.current is react (gets input) and next .value is javascript thing\r\n    //change the page to store/whatever the user enters - do not want to refresh just go using react router\r\n    //storePicker is a child of Router so we can access the props because Router is the parent!\r\n    this.props.history.push(`/store/${storeName}`);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      //only ever return ONE element, you can put as many child elements inside a parent element, cannot return sibling elements\r\n      //the solution to that - wrap them in a React.Fragment tag!\r\n      <form className=\"store-selector\" onSubmit={this.goToStore}>\r\n        {/*goToStore not calling the function - pointing to the ref of the function or else itll call on page render*/}\r\n        <h2>Please enter a store</h2>\r\n        {/*must used defaultValue=\"hello\" cannot manually set to value because it must be from state*/}\r\n        <input\r\n          type=\"text\"\r\n          ref={this.myInput}\r\n          required\r\n          placeholder=\"Store Name\"\r\n          defaultValue={getFunName()}\r\n        />\r\n        <button type=\"submit\">Visit Store</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default StorePicker;\r\n","import React from 'react';\r\n\r\n//if its just somethign thats passed in data we can just use a functional component (better perf too)\r\nconst Header = ({ tagline }) => (\r\n  <header className=\"top\">\r\n    <h1>\r\n      Bob's{' '}\r\n      <span className=\"ofThe\">\r\n        <span className=\"of\">Animal</span>\r\n        <span className=\"the\">Crossing</span>\r\n      </span>{' '}\r\n      Fish\r\n    </h1>\r\n    <h3 className=\"tagline\">\r\n      <span>{tagline}</span>{' '}\r\n      {/*this is the component instance and .props the object inside the component*/}\r\n    </h3>\r\n  </header>\r\n);\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nclass Order extends Component {\r\n  renderOrder = key => {\r\n    const fish = this.props.fishes[key];\r\n    const count = this.props.order[key];\r\n\r\n    const isAvailable = fish.status === 'available';\r\n    if (!isAvailable) {\r\n      return <li>Sorry {fish ? fish.name : 'fish'} is no longer available!</li>;\r\n    }\r\n\r\n    return (\r\n      <li>\r\n        {count}x {fish.name} {count * fish.price} Bells\r\n      </li>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const orderIds = Object.keys(this.props.order);\r\n    const total = orderIds.reduce((prevTotal, key) => {\r\n      const fish = this.props.fishes[key];\r\n      const count = this.props.order[key];\r\n      //boolean to check if fish available\r\n      const isAvailable = fish && fish.status === 'available';\r\n      if (isAvailable) {\r\n        return prevTotal + count * fish.price;\r\n      }\r\n      return prevTotal; //fish not available keep adding up additional ones\r\n    }, 0); //return a tally, starts at 0\r\n    return (\r\n      <div className=\"order-wrap\">\r\n        <h2>Sell</h2>\r\n        <ul className=\"order\">{orderIds.map(this.renderOrder)}</ul>\r\n        <div className=\"total\">\r\n          <strong>Total: {total} bells</strong>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Order;\r\n","import React, { Component } from 'react';\r\n\r\nclass AddFishForm extends Component {\r\n  nameRef = React.createRef();\r\n  priceRef = React.createRef();\r\n  statusRef = React.createRef();\r\n  descRef = React.createRef();\r\n  imageRef = React.createRef();\r\n\r\n  createFish = event => {\r\n    event.preventDefault();\r\n    const fish = {\r\n      name: this.nameRef.current.value,\r\n      price: this.priceRef.current.value,\r\n      status: this.statusRef.current.value,\r\n      desc: this.descRef.current.value,\r\n      image: this.imageRef.current.value\r\n    };\r\n    this.props.addFish(fish);\r\n    //refresh the form\r\n    event.currentTarget.reset(); //form itself - clear the form\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className=\"fish-edit\" onSubmit={this.createFish}>\r\n        <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\r\n        <input\r\n          name=\"price\"\r\n          ref={this.priceRef}\r\n          type=\"text\"\r\n          placeholder=\"Bells\"\r\n        />\r\n        <select name=\"status\" ref={this.statusRef}>\r\n          <option value=\"available\">Fresh</option>\r\n          <option value=\"unavailable\">Sold Out!</option>\r\n        </select>\r\n        <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\" />\r\n        <input\r\n          name=\"image\"\r\n          type=\"text\"\r\n          ref={this.imageRef}\r\n          placeholder=\"Image\"\r\n        />\r\n\r\n        <button type=\"submit\">Add Fish🐟</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddFishForm;\r\n","import React, { Component } from 'react';\r\nimport AddFishForm from './AddFishForm';\r\n\r\n//state is just an OBJECT that lives inside a component that stores all the data of that component needs + children needs\r\n//single source of truth\r\nclass Inventory extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"inventory\">\r\n        <h2>Pocket</h2>\r\n        <AddFishForm addFish={this.props.addFish} />\r\n        <button onClick={this.props.loadSampleFishes}>\r\n          Load Sample Fishies\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Inventory;\r\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: 'Bitterling',\n    image: '/images/bitterling.jpg',\n    desc:\n      'These fish are so small, they can fit their entire body in the palm of your hand. During mating season, the males belly turns a light orange in order to properly attract a mate. They live in rivers and lakes and deposit eggs in large bivalves where the eggs hatch and live for a while.',\n    price: 900,\n    status: 'available'\n  },\n\n  fish2: {\n    name: 'Pale Chub',\n    image: '/images/palechub.jpg',\n    desc:\n      'These fish are related to carp, with distinguishing features such as long ventral fins and protruding mouths. They have good jumping abilities, which allow them to jump up and grab bugs hanging around the water. They are known as very active fish with rather scrappy attitudes, making them tenacious survivors. During mating season, the males stomach turns pink and its back turns blue. Females love this.',\n    price: 160,\n    status: 'available'\n  },\n\n  fish3: {\n    name: 'Crucian Carp',\n    image: '/images/crucian.jpg',\n    desc:\n      'Crucian carp are fairly easy fish for beginners to catch, but they are also popular with veteran anglers. They are related to koi and can live up to 15 years, making them a great fish to keep in a pond. Male offspring are seldom born, so females significantly outnumber males, making populations suffer. Luckily, females reproduce with males of some other species, so the problem is relatively temporary.',\n    price: 120,\n    status: 'unavailable'\n  },\n\n  fish4: {\n    name: 'Goldfish',\n    image: '/images/goldfish.png',\n    desc:\n      'Those adorable little fins! Those huge googly eyes! Even I am helpless in the face of their cuteness ',\n    price: 1300,\n    status: 'available'\n  },\n\n  fish5: {\n    name: 'Sea Bass',\n    image: '/images/seabass.jpg',\n    desc:\n      'Sea bass are famous for their delicious white meat as well as their large size. If they ingest something inedible, they open up their mouths and gills and violently shake their heads. This generally manages to expel the foreign material, though it has the added effect of looking rather odd. Much like their freshwater cousins, sea bass have a strong pull, making them a great challenge for anglers.',\n    price: 200,\n    status: 'available'\n  },\n\n  fish6: {\n    name: 'Dab',\n    image: '/images/dab.jpg',\n    desc:\n      'By the by... Just so you know, eyes on a dab are positioned on the right, but on the left on a flounder. When young, these fish are shaped like ordinary fish, but... As they mature, they start becoming flatter in preparation for adulthood! What professionalism! You can tell this is a very responsible fish, wot?',\n    price: 200,\n    status: 'available'\n  },\n\n  fish7: {\n    name: 'Whale Shark',\n    image: '/images/whaleshark.png',\n    desc:\n      'Whale sharks are the worlds largest fish, but they are surprisingly some of the gentlest. They can swim at only three mph, so although they are large and very imposing, they are not really a threat. They swim with their mouths open to swallow vast quantities of tiny creatures and sea water. As they expel the water through their gills, they will eat what then remains. Since they do not have to bite prey their teeth are file-like and number about 10,000 in multiple rows.',\n    price: 13000,\n    status: 'unavailable'\n  },\n\n  fish8: {\n    name: 'Moray Eel',\n    image: '/images/moray.png',\n    desc:\n      'Moray eels can often be seen sticking just their heads out from between two rocks. When unsuspecting prey approaches, the dart out to snatch it up into their sharp-toothed mouths. Once moray eels have their teeth in you, it is hard to get away, making moray-eel bites no trifling matter. Their long, finless bodies are covered in tough, snakelike skin that often gets used as leather.',\n    price: 2000,\n    status: 'available'\n  },\n\n  fish9: {\n    name: 'Tuna',\n    image: '/images/tuna.jpg',\n    desc:\n      'Tuna can reach almost 10 feet in length and weigh over 800 pounds, which is huge in the fish world. Combining this great size with their good flavor makes them literally the biggest catch for most anglers. Tuna cannot breathe when they are not moving, so their entire lives revolve around constantly swimming. To sleep, they merely slow down. This ability to swim while sleeping is a huge advantage. They are also rather fast, capable of beating both sets of fins so hard they reach speeds of 50 mph.',\n    price: 7000,\n    status: 'available'\n  }\n};\n\nexport default fishes;\n","import React, { Component } from 'react';\r\n\r\nclass Fish extends Component {\r\n  render() {\r\n    const { image, name, price, desc, status } = this.props.details;\r\n    const isAvailable = status === 'available';\r\n    return (\r\n      <li className=\"menu-fish\">\r\n        <img src={image} alt={name} />\r\n        <h3 className=\"fish-name\">{name}</h3>\r\n        <span className=\"price\">{price}</span>\r\n        <p>{desc}</p>\r\n        <button\r\n          disabled={!isAvailable}\r\n          onClick={() => this.props.addToOrder(this.props.index)}\r\n        >\r\n          {isAvailable ? 'Sell to Reese' : 'None in pocket'}\r\n        </button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fish;\r\n","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Order from './Order';\r\nimport Inventory from './Inventory';\r\nimport sampleFishes from '../sample-fishes';\r\nimport Fish from './Fish';\r\n\r\nclass App extends Component {\r\n  //setting state with a property\r\n  state = {\r\n    fishes: {},\r\n    order: {}\r\n  };\r\n\r\n  addFish = fish => {\r\n    //to update state:\r\n    //1 - first we need to get a copy of the existing state - never want to reach into state and modify it directly (mutation)\r\n    //will cause perf issues or updating out of order\r\n    const fishes = { ...this.state.fishes };\r\n    // 2 - add our new fish to the fishes obj\r\n    fishes[`fish${Date.now()}`] = fish; //returns the ms since 1970 as our unique value\r\n\r\n    //set the new fishes object to state\r\n    this.setState({\r\n      fishes: fishes\r\n    });\r\n  };\r\n\r\n  loadSampleFishes = () => {\r\n    this.setState({\r\n      fishes: sampleFishes\r\n    });\r\n  };\r\n\r\n  addToOrder = key => {\r\n    //take a copy of state\r\n    const order = { ...this.state.order };\r\n    //add to the order or update the number in our order\r\n    order[key] = order[key] + 1 || 1; //if order.fish1 exists increment it by 1 or add value of 1\r\n    this.setState({ order });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"catch-of-the-day\">\r\n        <div className=\"menu\">\r\n          <Header tagline=\"Only the best pfffffppt\" age={12} cool={true} />\r\n          <ul className=\"fishes\">\r\n            {Object.keys(this.state.fishes).map(key => (\r\n              <Fish\r\n                key={key}\r\n                details={this.state.fishes[key]}\r\n                addToOrder={this.addToOrder}\r\n                index={key}\r\n              />\r\n            ))}\r\n          </ul>\r\n        </div>\r\n        <Order fishes={this.state.fishes} order={this.state.order} />\r\n        <Inventory\r\n          addFish={this.addFish}\r\n          loadSampleFishes={this.loadSampleFishes}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nconst notFound = () => (\r\n  <div>\r\n    <h2>\r\n      ERROR: Not found{' '}\r\n      <span role=\"img\" aria-label=\"sad face\">\r\n        😢\r\n      </span>\r\n    </h2>\r\n  </div>\r\n);\r\n\r\nexport default notFound;\r\n","import { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport React from 'react';\r\nimport StorePicker from './StorePicker';\r\nimport App from './App';\r\nimport NotFound from './NotFound';\r\n\r\nconst Router = () => (\r\n  <BrowserRouter>\r\n    <Switch>\r\n      {/* tries the first route and uses fallbacks if not found*/}\r\n      {/*what path - in this context its abs of / and renders out component storepicker*/}\r\n      <Route exact path=\"/ACfish\" component={StorePicker} />\r\n      {/*catch all for any store name*/}\r\n      <Route path=\"/store/:storeId\" component={App} />\r\n      {/*catch all fallback*/}\r\n      <Route component={NotFound} />\r\n    </Switch>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default Router;\r\n","import React from 'react'; //behind the scenes goes into node modules folder\r\n//need a secondary package known as React DOM so we can render to the DOM:\r\nimport { render } from 'react-dom'; //only need 1 method, cherry pick a method from the package we only need the Render method\r\nimport StorePicker from './components/StorePicker';\r\nimport App from './components/App';\r\nimport './css/style.css';\r\nimport Router from './components/Router';\r\n\r\n//only time where we do touch the DOM and thats when we mount it to the page\r\nrender(<Router />, document.querySelector('#main')); //need to give it an actual DOM element to mount too\r\n"],"sourceRoot":""}